/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { DummyUSDT, DummyUSDTInterface } from "../../contracts/DummyUSDT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "faucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50336040518060400160405280600a81526020017f44756d6d792055534454000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f6455534454000000000000000000000000000000000000000000000000000000815250816003908162000090919062000777565b508060049081620000a2919062000777565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200011a5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001119190620008a3565b60405180910390fd5b6200012b816200017160201b60201c565b506200016b33620001416200023760201b60201c565b600a6200014f919062000a50565b620f42406200015f919062000aa1565b6200024060201b60201c565b62000b92565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002b55760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620002ac9190620008a3565b60405180910390fd5b620002c960008383620002cd60201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200032357806002600082825462000316919062000aec565b92505081905550620003f9565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015620003b2578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620003a99392919062000b38565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000444578060026000828254039250508190555062000491565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620004f0919062000b75565b60405180910390a3505050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200057f57607f821691505b60208210810362000595576200059462000537565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620005c0565b6200060b8683620005c0565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000658620006526200064c8462000623565b6200062d565b62000623565b9050919050565b6000819050919050565b620006748362000637565b6200068c62000683826200065f565b848454620005cd565b825550505050565b600090565b620006a362000694565b620006b081848462000669565b505050565b5b81811015620006d857620006cc60008262000699565b600181019050620006b6565b5050565b601f8211156200072757620006f1816200059b565b620006fc84620005b0565b810160208510156200070c578190505b620007246200071b85620005b0565b830182620006b5565b50505b505050565b600082821c905092915050565b60006200074c600019846008026200072c565b1980831691505092915050565b600062000767838362000739565b9150826002028217905092915050565b6200078282620004fd565b67ffffffffffffffff8111156200079e576200079d62000508565b5b620007aa825462000566565b620007b7828285620006dc565b600060209050601f831160018114620007ef5760008415620007da578287015190505b620007e6858262000759565b86555062000856565b601f198416620007ff866200059b565b60005b82811015620008295784890151825560018201915060208501945060208101905062000802565b8683101562000849578489015162000845601f89168262000739565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200088b826200085e565b9050919050565b6200089d816200087e565b82525050565b6000602082019050620008ba600083018462000892565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156200094e57808604811115620009265762000925620008c0565b5b6001851615620009365780820291505b80810290506200094685620008ef565b945062000906565b94509492505050565b60008262000969576001905062000a3c565b8162000979576000905062000a3c565b81600181146200099257600281146200099d57620009d3565b600191505062000a3c565b60ff841115620009b257620009b1620008c0565b5b8360020a915084821115620009cc57620009cb620008c0565b5b5062000a3c565b5060208310610133831016604e8410600b841016171562000a0d5782820a90508381111562000a075762000a06620008c0565b5b62000a3c565b62000a1c8484846001620008fc565b9250905081840481111562000a365762000a35620008c0565b5b81810290505b9392505050565b600060ff82169050919050565b600062000a5d8262000623565b915062000a6a8362000a43565b925062000a997fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000957565b905092915050565b600062000aae8262000623565b915062000abb8362000623565b925082820262000acb8162000623565b9150828204841483151762000ae55762000ae4620008c0565b5b5092915050565b600062000af98262000623565b915062000b068362000623565b925082820190508082111562000b215762000b20620008c0565b5b92915050565b62000b328162000623565b82525050565b600060608201905062000b4f600083018662000892565b62000b5e602083018562000b27565b62000b6d604083018462000b27565b949350505050565b600060208201905062000b8c600083018462000b27565b92915050565b6113bd8062000ba26000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a9059cbb11610066578063a9059cbb1461023b578063b86d1d631461026b578063dd62ed3e14610287578063f2fde38b146102b7576100ea565b8063715018a6146101f55780638da5cb5b146101ff57806395d89b411461021d576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806340c10f19146101a957806370a08231146101c5576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102d3565b6040516101049190610e51565b60405180910390f35b61012760048036038101906101229190610f0c565b610365565b6040516101349190610f67565b60405180910390f35b610145610388565b6040516101529190610f91565b60405180910390f35b61017560048036038101906101709190610fac565b610392565b6040516101829190610f67565b60405180910390f35b6101936103c1565b6040516101a0919061101b565b60405180910390f35b6101c360048036038101906101be9190610f0c565b6103ca565b005b6101df60048036038101906101da9190611036565b6103e0565b6040516101ec9190610f91565b60405180910390f35b6101fd610428565b005b61020761043c565b6040516102149190611072565b60405180910390f35b610225610466565b6040516102329190610e51565b60405180910390f35b61025560048036038101906102509190610f0c565b6104f8565b6040516102629190610f67565b60405180910390f35b61028560048036038101906102809190611036565b61051b565b005b6102a1600480360381019061029c919061108d565b610547565b6040516102ae9190610f91565b60405180910390f35b6102d160048036038101906102cc9190611036565b6105ce565b005b6060600380546102e2906110fc565b80601f016020809104026020016040519081016040528092919081815260200182805461030e906110fc565b801561035b5780601f106103305761010080835404028352916020019161035b565b820191906000526020600020905b81548152906001019060200180831161033e57829003601f168201915b5050505050905090565b600080610370610654565b905061037d81858561065c565b600191505092915050565b6000600254905090565b60008061039d610654565b90506103aa85828561066e565b6103b5858585610702565b60019150509392505050565b60006012905090565b6103d26107f6565b6103dc828261087d565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104306107f6565b61043a60006108ff565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610475906110fc565b80601f01602080910402602001604051908101604052809291908181526020018280546104a1906110fc565b80156104ee5780601f106104c3576101008083540402835291602001916104ee565b820191906000526020600020905b8154815290600101906020018083116104d157829003601f168201915b5050505050905090565b600080610503610654565b9050610510818585610702565b600191505092915050565b610544816105276103c1565b600a610533919061128f565b60c861053f91906112da565b61087d565b50565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6105d66107f6565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106485760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161063f9190611072565b60405180910390fd5b610651816108ff565b50565b600033905090565b61066983838360016109c5565b505050565b600061067a8484610547565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106fc57818110156106ec578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016106e39392919061131c565b60405180910390fd5b6106fb848484840360006109c5565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107745760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161076b9190611072565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107e65760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107dd9190611072565b60405180910390fd5b6107f1838383610b9c565b505050565b6107fe610654565b73ffffffffffffffffffffffffffffffffffffffff1661081c61043c565b73ffffffffffffffffffffffffffffffffffffffff161461087b5761083f610654565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108729190611072565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108ef5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108e69190611072565b60405180910390fd5b6108fb60008383610b9c565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a375760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610a2e9190611072565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610aa95760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610aa09190611072565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b96578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b8d9190610f91565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bee578060026000828254610be29190611353565b92505081905550610cc1565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c7a578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c719392919061131c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d0a5780600260008282540392505081905550610d57565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610db49190610f91565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610dfb578082015181840152602081019050610de0565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e2382610dc1565b610e2d8185610dcc565b9350610e3d818560208601610ddd565b610e4681610e07565b840191505092915050565b60006020820190508181036000830152610e6b8184610e18565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ea382610e78565b9050919050565b610eb381610e98565b8114610ebe57600080fd5b50565b600081359050610ed081610eaa565b92915050565b6000819050919050565b610ee981610ed6565b8114610ef457600080fd5b50565b600081359050610f0681610ee0565b92915050565b60008060408385031215610f2357610f22610e73565b5b6000610f3185828601610ec1565b9250506020610f4285828601610ef7565b9150509250929050565b60008115159050919050565b610f6181610f4c565b82525050565b6000602082019050610f7c6000830184610f58565b92915050565b610f8b81610ed6565b82525050565b6000602082019050610fa66000830184610f82565b92915050565b600080600060608486031215610fc557610fc4610e73565b5b6000610fd386828701610ec1565b9350506020610fe486828701610ec1565b9250506040610ff586828701610ef7565b9150509250925092565b600060ff82169050919050565b61101581610fff565b82525050565b6000602082019050611030600083018461100c565b92915050565b60006020828403121561104c5761104b610e73565b5b600061105a84828501610ec1565b91505092915050565b61106c81610e98565b82525050565b60006020820190506110876000830184611063565b92915050565b600080604083850312156110a4576110a3610e73565b5b60006110b285828601610ec1565b92505060206110c385828601610ec1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061111457607f821691505b602082108103611127576111266110cd565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156111b35780860481111561118f5761118e61112d565b5b600185161561119e5780820291505b80810290506111ac8561115c565b9450611173565b94509492505050565b6000826111cc5760019050611288565b816111da5760009050611288565b81600181146111f057600281146111fa57611229565b6001915050611288565b60ff84111561120c5761120b61112d565b5b8360020a9150848211156112235761122261112d565b5b50611288565b5060208310610133831016604e8410600b841016171561125e5782820a9050838111156112595761125861112d565b5b611288565b61126b8484846001611169565b925090508184048111156112825761128161112d565b5b81810290505b9392505050565b600061129a82610ed6565b91506112a583610fff565b92506112d27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846111bc565b905092915050565b60006112e582610ed6565b91506112f083610ed6565b92508282026112fe81610ed6565b915082820484148315176113155761131461112d565b5b5092915050565b60006060820190506113316000830186611063565b61133e6020830185610f82565b61134b6040830184610f82565b949350505050565b600061135e82610ed6565b915061136983610ed6565b92508282019050808211156113815761138061112d565b5b9291505056fea264697066735822122005a96e1ecbb7f8026930f0d8c0a9b0fd34d9146bf6c9d49494e074a40ead887d64736f6c63430008140033";

type DummyUSDTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyUSDTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyUSDT__factory extends ContractFactory {
  constructor(...args: DummyUSDTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DummyUSDT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DummyUSDT__factory {
    return super.connect(runner) as DummyUSDT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyUSDTInterface {
    return new Interface(_abi) as DummyUSDTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DummyUSDT {
    return new Contract(address, _abi, runner) as unknown as DummyUSDT;
  }
}
